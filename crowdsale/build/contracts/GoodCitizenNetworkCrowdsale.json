{
  "contractName": "GoodCitizenNetworkCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "caps",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "getUserCap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiaries",
          "type": "address[]"
        },
        {
          "name": "_cap",
          "type": "uint256"
        }
      ],
      "name": "setGroupCap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "getUserContribution",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "name": "_cap",
          "type": "uint256"
        }
      ],
      "name": "setUserCap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "name": "_closingTime",
          "type": "uint256"
        },
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setClosingTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getClosingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "getBalanceForAddress",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x606060405260043610610175576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b1461018057806327e235e3146101ad5780632c4e722e146101fa5780632f9cb9aa14610223578063355274ea1461024c57806340193883146102755780634042b66f1461029e57806342e94c90146102c75780634b6753bc146103145780634b89c41d1461033d5780634bb278f3146103605780634f93594514610375578063521eb273146103a257806366d97b21146103f75780637d3d6522146104445780638b58c64c146104715780638d4e4083146104be5780638d8f2adb146104eb5780638da5cb5b14610500578063a31f61fc14610555578063b24046f51461058c578063b5545a3c146105d9578063b7a8807c146105ee578063bb8b2b4714610617578063c3143fe514610664578063ec8ac4d8146106a6578063f2fde38b146106d4578063fbfa77cf1461070d578063fc0c546a14610762575b61017e336107b7565b005b341561018b57600080fd5b610193610885565b604051808215151515815260200191505060405180910390f35b34156101b857600080fd5b6101e4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610891565b6040518082815260200191505060405180910390f35b341561020557600080fd5b61020d6108a9565b6040518082815260200191505060405180910390f35b341561022e57600080fd5b6102366108af565b6040518082815260200191505060405180910390f35b341561025757600080fd5b61025f6108b9565b6040518082815260200191505060405180910390f35b341561028057600080fd5b6102886108bf565b6040518082815260200191505060405180910390f35b34156102a957600080fd5b6102b16108c5565b6040518082815260200191505060405180910390f35b34156102d257600080fd5b6102fe600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506108cb565b6040518082815260200191505060405180910390f35b341561031f57600080fd5b6103276108e3565b6040518082815260200191505060405180910390f35b341561034857600080fd5b61035e60048080359060200190919050506108e9565b005b341561036b57600080fd5b61037361094f565b005b341561038057600080fd5b610388610a2b565b604051808215151515815260200191505060405180910390f35b34156103ad57600080fd5b6103b5610a3a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561040257600080fd5b61042e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a60565b6040518082815260200191505060405180910390f35b341561044f57600080fd5b610457610a78565b604051808215151515815260200191505060405180910390f35b341561047c57600080fd5b6104a8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a87565b6040518082815260200191505060405180910390f35b34156104c957600080fd5b6104d1610ad0565b604051808215151515815260200191505060405180910390f35b34156104f657600080fd5b6104fe610ae3565b005b341561050b57600080fd5b610513610b9b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561056057600080fd5b61058a60048080359060200190820180359060200191909192908035906020019091905050610bc1565b005b341561059757600080fd5b6105c3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cb0565b6040518082815260200191505060405180910390f35b34156105e457600080fd5b6105ec610cf9565b005b34156105f957600080fd5b610601610dfa565b6040518082815260200191505060405180910390f35b341561062257600080fd5b61064e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e00565b6040518082815260200191505060405180910390f35b341561066f57600080fd5b6106a4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e49565b005b6106d2600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506107b7565b005b34156106df57600080fd5b61070b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610eed565b005b341561071857600080fd5b610720611045565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561076d57600080fd5b61077561106b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506107c78383611090565b6107d082611094565b90506107e7826003546110b290919063ffffffff16565b6003819055506107f783826110d0565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a361086e8383611169565b61087661120c565b61088083836112df565b505050565b60006006544211905090565b600c6020528060005260406000206000915090505481565b60025481565b6000600654905090565b60045481565b60085481565b60035481565b600a6020528060005260406000206000915090505481565b60065481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561094557600080fd5b8060068190555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109ab57600080fd5b600760149054906101000a900460ff161515156109c757600080fd5b6109cf610885565b15156109da57600080fd5b6109e26112e3565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b60006004546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b6020528060005260406000206000915090505481565b60006008546003541015905090565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760149054906101000a900460ff1681565b6000610aed610885565b1515610af857600080fd5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081111515610b4957600080fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b983382611432565b50565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c1f57600080fd5b600090505b83839050811015610caa5781600b60008686858181101515610c4257fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080600101915050610c24565b50505050565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760149054906101000a900460ff161515610d1457600080fd5b610d1c610a78565b151515610d2857600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1515610de457600080fd5b6102c65a03f11515610df557600080fd5b505050565b60055481565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ea557600080fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f4957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610f8557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5050565b60006110ab6002548361152890919063ffffffff16565b9050919050565b60008082840190508381101515156110c657fe5b8091505092915050565b61112281600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110b290919063ffffffff16565b600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6111738282611563565b6111c581600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110b290919063ffffffff16565b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b15156112c857600080fd5b6125ee5a03f115156112d957600080fd5b50505050565b5050565b6112eb610a78565b1561138e57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b151561137557600080fd5b6102c65a03f1151561138657600080fd5b505050611428565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b151561141357600080fd5b6102c65a03f1151561142457600080fd5b5050505b611430611567565b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156114fe57600080fd5b6102c65a03f1151561150f57600080fd5b50505060405180519050151561152457600080fd5b5050565b600080600084141561153d576000915061155c565b828402905082848281151561154e57fe5b0414151561155857fe5b8091505b5092915050565b5050565b5600a165627a7a72305820758c6af50c40c406ace4c096bcd4de23c4465dfb558b1261e31f57a7e2acad350029",
  "sourceMap": "1094:1520:0:-;;;383:5:3;357:31;;;;;;;;;;;;;;;;;;;;1383:489:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:5;1637:12;1651;1612:4;1568:5;1575:7;1584:6;1711:1:2;1703:5;:9;1695:18;;;;;;;;1746:1;1727:21;;:7;:21;;;;1719:30;;;;;;;;1781:1;1763:20;;:6;:20;;;;1755:29;;;;;;;;1798:5;1791:4;:12;;;;1818:7;1809:6;;:16;;;;;;;;;;;;;;;;;;1839:6;1831:5;;:14;;;;;;;;;;;;;;;;;;1617:233;;;485:1:8;478:4;:8;470:17;;;;;;;;499:4;493:3;:10;;;;418:90;759:3:10;743:12;:19;;735:28;;;;;;;;793:12;777;:28;;769:37;;;;;;;;827:12;813:11;:26;;;;859:12;845:11;:26;;;;654:222;;509:10:12;501:5;;:18;;;;;;;;;;;;;;;;;;771:1:5;763:5;:9;755:18;;;;;;;;803:6;;;;;;;;;;;787:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:5;;:31;;;;;;;;;;;;;;;;;;823:5;816:4;:12;;;;698:135;1862:4:0;1853:5;:13;;1845:22;;;;;;;;1383:489;;;;;;;1094:1520;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1094:1520:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2080:21:2;2090:10;2080:9;:21::i;:::-;1094:1520:0;1030:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;333:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1006:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2397:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;252:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1056:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;306:48:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;292:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;559:158:3;;;;;;;;;;;;;;617:83:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;358:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1220:108:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;357:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:202:4;;;;;;;;;;;;;;238:20:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:187:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:121:5;;;;;;;;;;;;;;262:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1499:126:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;570:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2242:542:2;;;;;;;;;;;;;;;;;;;;832:169:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;871:18:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2242:542;2305:17;2436:14;2325:9;2305:29;;2340:45;2361:12;2375:9;2340:20;:45::i;:::-;2453:26;2469:9;2453:15;:26::i;:::-;2436:43;;2518:24;2532:9;2518;;:13;;:24;;;;:::i;:::-;2506:9;:36;;;;2549:38;2566:12;2580:6;2549:16;:38::i;:::-;2619:12;2593:58;;2607:10;2593:58;;;2633:9;2644:6;2593:58;;;;;;;;;;;;;;;;;;;;;;;;2658:47;2681:12;2695:9;2658:22;:47::i;:::-;2712:15;:13;:15::i;:::-;2733:46;2755:12;2769:9;2733:21;:46::i;:::-;2242:542;;;:::o;1030:83:10:-;1072:4;1097:11;;1091:3;:17;1084:24;;1030:83;:::o;333:43:4:-;;;;;;;;;;;;;;;;;:::o;1006:19:2:-;;;;:::o;2397:87:0:-;2446:7;2468:11;;2461:18;;2397:87;:::o;252:18:8:-;;;;:::o;493:19:5:-;;;;:::o;1056:24:2:-;;;;:::o;306:48:9:-;;;;;;;;;;;;;;;;;:::o;292:26:10:-;;;;:::o;2288:105:0:-;1361:5;;;;;;;;;;;1347:19;;:10;:19;;;1339:28;;;;;;;;2384:4;2370:11;:18;;;;2288:105;:::o;559:158:3:-;1361:5:0;;;;;;;;;;;1347:19;;:10;:19;;;1339:28;;;;;;;;611:11:3;;;;;;;;;;;610:12;602:21;;;;;;;;637:11;:9;:11::i;:::-;629:20;;;;;;;;656:14;:12;:14::i;:::-;676:11;;;;;;;;;;708:4;694:11;;:18;;;;;;;;;;;;;;;;;;559:158::o;617:83:8:-;660:4;692:3;;679:9;;:16;;672:23;;617:83;:::o;933:21:2:-;;;;;;;;;;;;;:::o;358:39:9:-;;;;;;;;;;;;;;;;;:::o;1156:85:5:-;1200:4;1232;;1219:9;;:17;;1212:24;;1156:85;:::o;1220:108:9:-;1283:7;1305:4;:18;1310:12;1305:18;;;;;;;;;;;;;;;;1298:25;;1220:108;;;:::o;357:31:3:-;;;;;;;;;;;;;:::o;795:202:4:-;860:14;842:11;:9;:11::i;:::-;834:20;;;;;;;;877:8;:20;886:10;877:20;;;;;;;;;;;;;;;;860:37;;920:1;911:6;:10;903:19;;;;;;;;951:1;928:8;:20;937:10;928:20;;;;;;;;;;;;;;;:24;;;;958:34;973:10;985:6;958:14;:34::i;:::-;795:202;:::o;238:20:12:-;;;;;;;;;;;;;:::o;865:187:9:-;956:9;1361:5:0;;;;;;;;;;;1347:19;;:10;:19;;;1339:28;;;;;;;;968:1:9;956:13;;951:97;975:14;;:21;;971:1;:25;951:97;;;1037:4;1011;:23;1016:14;;1031:1;1016:17;;;;;;;;;;;;;;;;;1011:23;;;;;;;;;;;;;;;:30;;;;998:3;;;;;;;951:97;;;865:187;;;;:::o;2488:124:0:-;2563:7;2585:8;:22;2594:12;2585:22;;;;;;;;;;;;;;;;2578:29;;2488:124;;;:::o;921:121:5:-;965:11;;;;;;;;;;;957:20;;;;;;;;992:13;:11;:13::i;:::-;991:14;983:23;;;;;;;;1013:5;;;;;;;;;;;:12;;;1026:10;1013:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:121::o;262:26:10:-;;;;:::o;1499:126:9:-;1571:7;1593:13;:27;1607:12;1593:27;;;;;;;;;;;;;;;;1586:34;;1499:126;;;:::o;570:111::-;1361:5:0;;;;;;;;;;;1347:19;;:10;:19;;;1339:28;;;;;;;;672:4:9;651;:18;656:12;651:18;;;;;;;;;;;;;;;:25;;;;570:111;;:::o;832:169:12:-;1361:5:0;;;;;;;;;;;1347:19;;:10;:19;;;1339:28;;;;;;;;928:1:12;908:22;;:8;:22;;;;900:31;;;;;;;;965:8;937:37;;958:5;;;;;;;;;;;937:37;;;;;;;;;;;;988:8;980:5;;:16;;;;;;;;;;;;;;;;;;832:169;:::o;581:24:5:-;;;;;;;;;;;;;:::o;871:18:2:-;;;;;;;;;;;;;:::o;1992:292:0:-;;;:::o;5130:115:2:-;5198:7;5220:20;5235:4;;5220:10;:14;;:20;;;;:::i;:::-;5213:27;;5130:115;;;:::o;1008:129:11:-;1066:7;1081:9;1097:1;1093;:5;1081:17;;1116:1;1111;:6;;1104:14;;;;;;1131:1;1124:8;;1008:129;;;;;:::o;571:155:4:-;681:40;708:12;681:8;:22;690:12;681:22;;;;;;;;;;;;;;;;:26;;:40;;;;:::i;:::-;656:8;:22;665:12;656:22;;;;;;;;;;;;;;;:65;;;;571:155;;:::o;2210:227:9:-;2299:54;2328:12;2342:10;2299:28;:54::i;:::-;2389:43;2421:10;2389:13;:27;2403:12;2389:27;;;;;;;;;;;;;;;;:31;;:43;;;;:::i;:::-;2359:13;:27;2373:12;2359:27;;;;;;;;;;;;;;;:73;;;;2210:227;;:::o;1573:87:5:-;1613:5;;;;;;;;;;;:13;;;1633:9;1644:10;1613:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1573:87::o;3642:112:2:-;;;:::o;1327:159:5:-;1370:13;:11;:13::i;:::-;1366:89;;;1393:5;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:89;;;1427:5;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:89;1461:20;:18;:20::i;:::-;1327:159::o;500:150:7:-;605:5;;;;;;;;;;;591:25;;;617:12;631;591:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;583:62;;;;;;;;500:150;;:::o;203:173:11:-;261:7;316:9;285:1;280;:6;276:35;;;303:1;296:8;;;;276:35;332:1;328;:5;316:17;;355:1;350;346;:5;;;;;;;;:10;339:18;;;;;;370:1;363:8;;203:173;;;;;;:::o;4779:113:2:-;;;:::o;913:38:3:-;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport \"./GoodCitizenNetworkToken.sol\";\nimport \"../node_modules/zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\nimport \"../node_modules/zeppelin-solidity/contracts/crowdsale/validation/IndividuallyCappedCrowdsale.sol\";\nimport \"../node_modules/zeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\nimport \"../node_modules/zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\nimport \"../node_modules/zeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol\";\n\n\n\n/**\n * @title GoodCitizenNetworkCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\ncontract GoodCitizenNetworkCrowdsale is CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale, IndividuallyCappedCrowdsale, PostDeliveryCrowdsale {\n\n  // Cap for individual purchase\n  uint256 private individualCap;\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function GoodCitizenNetworkCrowdsale(uint256 _openingTime, uint256 _closingTime, uint256 _rate, address _wallet, uint256 _cap, MintableToken _token, uint256 _goal) public\n    Crowdsale(_rate, _wallet, _token)\n    CappedCrowdsale(_cap)\n    TimedCrowdsale(_openingTime, _closingTime)\n    RefundableCrowdsale(_goal)\n  {\n    //As goal needs to be met for a successful crowdsale\n    //the value needs to less or equal than a cap which is limit for accepted funds\n    require(_goal <= _cap);\n  }\n\n  function createTokenContract() internal returns (MintableToken) {\n    return new GoodCitizenNetworkToken(); \n  }\n\n  function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal {\n    //require(_beneficiary != address(0));\n    //require(_weiAmount != 0);\n    //require(contributions[_beneficiary].add(_weiAmount) <= caps[_beneficiary]);\n    //require(weiRaised.add(_weiAmount) <= cap);\n  }\n\n  function setClosingTime(uint256 time) onlyOwner {\n    //require(time >= now);\n    closingTime = time;\n  }\n\n  function getClosingTime() external view returns (uint256) {\n    return closingTime;\n  }\n\n  function getBalanceForAddress(address _beneficiary) external view returns (uint256) {\n    return balances[_beneficiary];\n  }\n}\n",
  "sourcePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/contracts/GoodCitizenNetworkCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/contracts/GoodCitizenNetworkCrowdsale.sol",
    "exportedSymbols": {
      "GoodCitizenNetworkCrowdsale": [
        120
      ]
    },
    "id": 121,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/contracts/GoodCitizenNetworkToken.sol",
        "file": "./GoodCitizenNetworkToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 136,
        "src": "26:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/node_modules/zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 840,
        "src": "66:94:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/node_modules/zeppelin-solidity/contracts/crowdsale/validation/IndividuallyCappedCrowdsale.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/crowdsale/validation/IndividuallyCappedCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 987,
        "src": "161:106:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/node_modules/zeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 586,
        "src": "268:100:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/node_modules/zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 778,
        "src": "369:92:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/node_modules/zeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 477,
        "src": "462:102:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 839,
              "src": "1134:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$839",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "1134:15:0"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 585,
              "src": "1151:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$585",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "1151:19:0"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 777,
              "src": "1172:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$777",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "1172:15:0"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "IndividuallyCappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 986,
              "src": "1189:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndividuallyCappedCrowdsale_$986",
                "typeString": "contract IndividuallyCappedCrowdsale"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "1189:27:0"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "PostDeliveryCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 476,
              "src": "1218:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PostDeliveryCrowdsale_$476",
                "typeString": "contract PostDeliveryCrowdsale"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "1218:21:0"
          }
        ],
        "contractDependencies": [
          135,
          359,
          407,
          476,
          585,
          777,
          839,
          986,
          1069,
          1223
        ],
        "contractKind": "contract",
        "documentation": "@title GoodCitizenNetworkCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 120,
        "linearizedBaseContracts": [
          120,
          476,
          986,
          777,
          585,
          407,
          1223,
          1069,
          839,
          359
        ],
        "name": "GoodCitizenNetworkCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 19,
            "name": "individualCap",
            "nodeType": "VariableDeclaration",
            "scope": 120,
            "src": "1278:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1278:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "1333:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1747,
                            "src": "1347:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1347:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1171,
                          "src": "1361:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1347:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1750,
                      "src": "1339:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:28:0"
                },
                {
                  "id": 28,
                  "nodeType": "PlaceholderStatement",
                  "src": "1373:1:0"
                }
              ]
            },
            "id": 30,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:2:0"
            },
            "src": "1312:67:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "1698:174:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 63,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1853:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 64,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1862:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1853:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 62,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1750,
                      "src": "1845:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1845:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:22:0"
                }
              ]
            },
            "id": 69,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 47,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "1568:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 48,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "1575:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 49,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "1584:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1489",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 50,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 46,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 359,
                  "src": "1558:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$359_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1558:33:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 52,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "1612:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 53,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 51,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 839,
                  "src": "1596:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$839_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:21:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 55,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "1637:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 56,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "1651:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 54,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1069,
                  "src": "1622:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1069_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1622:42:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 59,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "1689:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 60,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 585,
                  "src": "1669:19:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$585_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1669:26:0"
              }
            ],
            "name": "GoodCitizenNetworkCrowdsale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1420:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1420:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1442:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1464:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1479:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1496:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1510:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1489",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 41,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1489,
                    "src": "1510:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1489",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1532:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1419:127:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:0:0"
            },
            "scope": 120,
            "src": "1383:489:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1940:48:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1953:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_GoodCitizenNetworkToken_$135_$",
                        "typeString": "function () returns (contract GoodCitizenNetworkToken)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 74,
                        "name": "GoodCitizenNetworkToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 135,
                        "src": "1957:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoodCitizenNetworkToken_$135",
                          "typeString": "contract GoodCitizenNetworkToken"
                        }
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1953:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GoodCitizenNetworkToken_$135",
                      "typeString": "contract GoodCitizenNetworkToken"
                    }
                  },
                  "functionReturnParameters": 73,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "1946:36:0"
                }
              ]
            },
            "id": 79,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createTokenContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1904:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1925:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1489",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 71,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1489,
                    "src": "1925:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1489",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1924:15:0"
            },
            "scope": 120,
            "src": "1876:112:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "2073:211:0",
              "statements": []
            },
            "id": 87,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2022:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2044:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2044:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2021:42:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2073:0:0"
            },
            "scope": 120,
            "src": "1992:292:0",
            "stateMutability": "nonpayable",
            "superFunction": 959,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "2336:57:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "closingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "2370:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "2384:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2370:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "2370:18:0"
                }
              ]
            },
            "id": 99,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 92,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 91,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30,
                  "src": "2326:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2326:9:0"
              }
            ],
            "name": "setClosingTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2312:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2312:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2311:14:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:0:0"
            },
            "scope": 120,
            "src": "2288:105:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "2455:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 999,
                    "src": "2468:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 103,
                  "id": 105,
                  "nodeType": "Return",
                  "src": "2461:18:0"
                }
              ]
            },
            "id": 107,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getClosingTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2420:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2446:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2445:9:0"
            },
            "scope": 120,
            "src": "2397:87:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "2572:40:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 114,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "2585:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 116,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "2594:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2585:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 113,
                  "id": 117,
                  "nodeType": "Return",
                  "src": "2578:29:0"
                }
              ]
            },
            "id": 119,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBalanceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2518:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2517:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2563:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2563:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2562:9:0"
            },
            "scope": 120,
            "src": "2488:124:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 121,
        "src": "1094:1520:0"
      }
    ],
    "src": "0:2615:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/contracts/GoodCitizenNetworkCrowdsale.sol",
    "exportedSymbols": {
      "GoodCitizenNetworkCrowdsale": [
        120
      ]
    },
    "id": 121,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/contracts/GoodCitizenNetworkToken.sol",
        "file": "./GoodCitizenNetworkToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 136,
        "src": "26:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/node_modules/zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 840,
        "src": "66:94:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/node_modules/zeppelin-solidity/contracts/crowdsale/validation/IndividuallyCappedCrowdsale.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/crowdsale/validation/IndividuallyCappedCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 987,
        "src": "161:106:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/node_modules/zeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 586,
        "src": "268:100:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/node_modules/zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 778,
        "src": "369:92:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/benjaminchen/Downloads/Savvy Tech Web-3/crowdsale/node_modules/zeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 121,
        "sourceUnit": 477,
        "src": "462:102:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 839,
              "src": "1134:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$839",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "1134:15:0"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 585,
              "src": "1151:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$585",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "1151:19:0"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 777,
              "src": "1172:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$777",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "1172:15:0"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "IndividuallyCappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 986,
              "src": "1189:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndividuallyCappedCrowdsale_$986",
                "typeString": "contract IndividuallyCappedCrowdsale"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "1189:27:0"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "PostDeliveryCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 476,
              "src": "1218:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PostDeliveryCrowdsale_$476",
                "typeString": "contract PostDeliveryCrowdsale"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "1218:21:0"
          }
        ],
        "contractDependencies": [
          135,
          359,
          407,
          476,
          585,
          777,
          839,
          986,
          1069,
          1223
        ],
        "contractKind": "contract",
        "documentation": "@title GoodCitizenNetworkCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 120,
        "linearizedBaseContracts": [
          120,
          476,
          986,
          777,
          585,
          407,
          1223,
          1069,
          839,
          359
        ],
        "name": "GoodCitizenNetworkCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 19,
            "name": "individualCap",
            "nodeType": "VariableDeclaration",
            "scope": 120,
            "src": "1278:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1278:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "1333:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1747,
                            "src": "1347:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1347:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1171,
                          "src": "1361:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1347:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1750,
                      "src": "1339:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:28:0"
                },
                {
                  "id": 28,
                  "nodeType": "PlaceholderStatement",
                  "src": "1373:1:0"
                }
              ]
            },
            "id": 30,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:2:0"
            },
            "src": "1312:67:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "1698:174:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 63,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1853:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 64,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1862:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1853:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 62,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1750,
                      "src": "1845:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1845:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:22:0"
                }
              ]
            },
            "id": 69,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 47,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "1568:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 48,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "1575:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 49,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "1584:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1489",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 50,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 46,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 359,
                  "src": "1558:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$359_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1558:33:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 52,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "1612:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 53,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 51,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 839,
                  "src": "1596:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$839_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:21:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 55,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "1637:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 56,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "1651:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 54,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1069,
                  "src": "1622:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1069_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1622:42:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 59,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "1689:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 60,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 585,
                  "src": "1669:19:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$585_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1669:26:0"
              }
            ],
            "name": "GoodCitizenNetworkCrowdsale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1420:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1420:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1442:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1464:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1479:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1496:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1510:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1489",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 41,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1489,
                    "src": "1510:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1489",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1532:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1419:127:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:0:0"
            },
            "scope": 120,
            "src": "1383:489:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1940:48:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1953:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_GoodCitizenNetworkToken_$135_$",
                        "typeString": "function () returns (contract GoodCitizenNetworkToken)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 74,
                        "name": "GoodCitizenNetworkToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 135,
                        "src": "1957:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoodCitizenNetworkToken_$135",
                          "typeString": "contract GoodCitizenNetworkToken"
                        }
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1953:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GoodCitizenNetworkToken_$135",
                      "typeString": "contract GoodCitizenNetworkToken"
                    }
                  },
                  "functionReturnParameters": 73,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "1946:36:0"
                }
              ]
            },
            "id": 79,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createTokenContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1904:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1925:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1489",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 71,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1489,
                    "src": "1925:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1489",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1924:15:0"
            },
            "scope": 120,
            "src": "1876:112:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "2073:211:0",
              "statements": []
            },
            "id": 87,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2022:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2044:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2044:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2021:42:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2073:0:0"
            },
            "scope": 120,
            "src": "1992:292:0",
            "stateMutability": "nonpayable",
            "superFunction": 959,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "2336:57:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "closingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "2370:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "2384:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2370:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "2370:18:0"
                }
              ]
            },
            "id": 99,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 92,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 91,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30,
                  "src": "2326:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2326:9:0"
              }
            ],
            "name": "setClosingTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2312:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2312:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2311:14:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:0:0"
            },
            "scope": 120,
            "src": "2288:105:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "2455:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 999,
                    "src": "2468:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 103,
                  "id": 105,
                  "nodeType": "Return",
                  "src": "2461:18:0"
                }
              ]
            },
            "id": 107,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getClosingTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2420:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2446:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2445:9:0"
            },
            "scope": 120,
            "src": "2397:87:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "2572:40:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 114,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "2585:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 116,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "2594:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2585:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 113,
                  "id": 117,
                  "nodeType": "Return",
                  "src": "2578:29:0"
                }
              ]
            },
            "id": 119,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBalanceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2518:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2517:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2563:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2563:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2562:9:0"
            },
            "scope": 120,
            "src": "2488:124:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 121,
        "src": "1094:1520:0"
      }
    ],
    "src": "0:2615:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0xc5806cda21c44d1a19e30dc88d5f44dbe8b1b588fb8791e3e206fc4a36095836"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xaf781c53c6a09fa81f89a286c9f1297352c89404",
      "transactionHash": "0x4a05560f489038ca5868ea849d9a799cbb2af92380ffb2b7f761278f8e136d7b"
    },
    "1522694260385": {
      "events": {},
      "links": {},
      "address": "0x61a21ca34b54d11cbf91f893dc68e20a2c10972d",
      "transactionHash": "0x934cf3254f29e13c5c12c2a2570a0478a2b63ea110fde2ac4a16970bc0aa9309"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-05T23:53:04.267Z"
}